Ques 1)
Write a program to classify numbers as prime, composite, or neither (for negative or zero values). Ensure it handles invalid inputs gracefully.

Code:
def classify(n):
    if n <= 1:
        return "Neither prime nor composite"

    for i in range(2, n):
        if n % i == 0:
            return "Composite"  
    return "Prime"

user_input = input("Enter a number: ")
try:
    num = int(user_input)  
    result = classify(num)  
    print(result)  
except ValueError:
    print("Invalid input! ")

    
Ques 2)
Create a program to implement a simple text-based menu system for a library that allows users to add, remove, search, and list books. Use loops and conditional statements effectively.

Code:
books = []

def add_book():
    book = input("Enter the book title to add: ")
    books.append(book)

def remove_book():
    book = input("Enter the book title to remove: ")
    if book in books:
        books.remove(book)
        print(f'"{book}" has been removed from the library.')
    else:
        print(f'"{book}" is not in the library.')

def search_book():
    book = input("Enter the book title to search: ")
    if book in books:
        print(f'"{book}" is in the library.')
    else:
        print(f'"{book}" is not in the library.')

def list_books():
    if books:
        print("Books in the library:")
        for book in books:
            print(f"{book}",)

print('''Library Menu:
1. Add a book
2. Remove a book
3. Search for a book
4. List all books''')


while True:
    choice = input("Choose an option (1-4): ") 

    if choice == "1":
        add_book()  
    elif choice == "2":
        remove_book() 
    elif choice == "3":
        search_book()  
    elif choice == "4":
        list_books()  
    else:
        print("Invalid option!")
        break


Ques 3)
Write a robust ATM transaction simulator that includes options for checking balances, depositing, withdrawing money, and exiting. Handle invalid inputs and edge cases.
taket
Code:
def check_balance(balance):
    print(f"Your current balance is: {balance[0]}")

def deposit(balance):
    try:
        amount = float(input("Enter the amount you want to deposit: "))
        if amount <= 0:
            print("Deposit amount must be positive.")
        else:
            balance[0] += amount
            print(f"{amount} has been deposited.")
    except ValueError:
        print("Invalid input! ")

def withdraw(balance):
    try:
        amount = float(input("Enter the amount you want to withdraw: "))
        if amount <= 0:
            print("Withdrawal amount must be positive.")
        elif amount > balance[0]:
            print("Insufficient funds! ")
        else:
            balance [0]-= amount
            print(f"{amount} has been withdrawn.")
    except ValueError:
        print("Invalid input! Please enter a valid number.")


print('''ATM Menu 
1. Check Balance
2. Deposit Money
3. Withdraw Money
4. Exit''')

balance = [0]
while True:
    choice = input("Choose an option (1-4): ")  

    if choice == "1":
        check_balance(balance) 
    elif choice == "2":
        deposit(balance)  
    elif choice == "3":
        withdraw(balance) 
    elif choice == "4":
        print("Thank you.")
        break  
    else:
        print("Invalid option!")  